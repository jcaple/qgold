AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Lambda function triggered by EventBridge schedule to fetch API data and store in DynamoDB

Parameters:
  ApiEndpointBase:
    Type: String
    Description: The base API endpoint URL to fetch data from (without the symbol)
    Default: https://api.gold-api.com/price
  
  TableName:
    Type: String
    Description: Name of the DynamoDB table
    Default: PriceDataTable
    
  LogLevel:
    Type: String
    Description: Log level for the Lambda function
    Default: INFO
    AllowedValues:
      - DEBUG
      - INFO
      - WARNING
      - ERROR
      - CRITICAL

Resources:
  # DynamoDB Table
  ApiDataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TableName
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: name
          AttributeType: S
        - AttributeName: date
          AttributeType: S
        - AttributeName: id
          AttributeType: S
        - AttributeName: asset_name
          AttributeType: S
      KeySchema:
        - AttributeName: name
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: DateIndex
          KeySchema:
            - AttributeName: date
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: IdIndex
          KeySchema:
            - AttributeName: id
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: AssetNameDateIndex
          KeySchema:
            - AttributeName: asset_name
              KeyType: HASH
            - AttributeName: date
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  # Lambda Function
  ApiDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: qgold-api-data-function
      CodeUri: functions/quote_retrieval
      Description: Retrieve quotes from API and store in DynamoDB
      Handler: lambda_function.lambda_handler
      Runtime: python3.10
      Timeout: 60
      MemorySize: 128
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref TableName
          API_ENDPOINT_BASE: !Ref ApiEndpointBase
          LOG_LEVEL: !Ref LogLevel
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ApiDataTable
        # Allow Lambda to make outbound API calls
        - Statement:
            - Effect: Allow
              Action:
                - 'logs:CreateLogGroup'
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
              Resource: '*'
              
  # Quote Analysis Lambda Function
  QuoteAnalysisFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: qgold-quote-analysis-function
      CodeUri: functions/quote_analysis
      Description: Retrieve records from DynamoDB based on name and date range
      Handler: lambda_function.lambda_handler
      Runtime: python3.10
      Timeout: 30
      MemorySize: 128
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref TableName
          LOG_LEVEL: !Ref LogLevel
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ApiDataTable

  # EventBridge Schedule Rule (Monday to Friday)
  WeekdayScheduleRule:
    Type: AWS::Scheduler::Schedule
    Properties:
      Name: qgold-weekday-schedule
      Description: Schedule to trigger Lambda function on weekdays
      FlexibleTimeWindow:
        Mode: "OFF"
      ScheduleExpression: cron(0 22 ? * MON-FRI *)  # Runs at 12:00 PM UTC on weekdays
      Target:
        Arn: !GetAtt ApiDataFunction.Arn
        RoleArn: !GetAtt SchedulerExecutionRole.Arn

  # IAM Role for EventBridge Scheduler
  SchedulerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: qgold-scheduler-execution-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: scheduler.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole

Outputs:
  ApiDataFunction:
    Description: API Data Lambda Function ARN
    Value: !GetAtt ApiDataFunction.Arn
  QuoteAnalysisFunction:
    Description: Quote Analysis Lambda Function ARN
    Value: !GetAtt QuoteAnalysisFunction.Arn
  ApiDataTable:
    Description: DynamoDB Table Name
    Value: !Ref ApiDataTable